djorm-ext-pgfulltext
Product.objects.search('dress | neon | detail',raw=True,rank_field="abc")


from haystack.query import SearchQuerySet
from haystack.query import SQ
SearchQuerySet().filter(content='test shahpur')
SearchQuerySet().filter(SQ(content='dress') | SQ(content='detail'))
SearchQuerySet().filter(SQ(content='dress white') | SQ(content='detail'))[0].object

HAYSTACK default query should be AND for filter to work in succession, else no filtering is done.
SearchQuerySet().filter(content='shahpur jat').filter(sex='Male')

or_query = None # Query to search for a given term in each field
        for field_name in search_fields:
            q = Q(**{"%s__icontains" % field_name: term})
            if or_query is None:
                or_query = q
            else:
                or_query = or_query | q



def store_queryset_gen(search_qs):
    for item in search_qs:
        yield item.object  # This is the line that gets the model instance out of the Search object

qs = queryset_gen(sqs)